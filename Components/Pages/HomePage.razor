@page "/"
@inject SqliteConnector Db

<div class="folder-list">
    @if (_folders.Any())
    {
        @foreach (var folder in _folders)
        {
            <div class="folder-item">
                <div class="folder-content">
                    @folder.Name
                </div>

                <div class="folder-actions">
                    <button class="icon-button" @onclick="() => ToggleMenu(folder.Id)">
                        <svg class="three-dots" viewBox="0 0 24 24">
                            <path
                                d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                        </svg>
                    </button>

                    @if (_activeMenuId == folder.Id)
                    {
                        <div class="menu-container @(_activeMenuId == folder.Id ? "visible" : "")">
                            <div class="menu">
                                <button class="menu-item" @onclick="() => DeleteFolder(folder.Id)">
                                    <span class="material-icons">
                                        <svg viewBox="0 0 1024 1024" class="icon" version="1.1"
                                             xmlns="http://www.w3.org/2000/svg" fill="#6750A4">
                                            <g
                                                id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                            <g
                                                id="SVGRepo_tracerCarrier" stroke-linecap="round"
                                                stroke-linejoin="round"></g>
                                            <g id="SVGRepo_iconCarrier">
                                                <path
                                                    d="M960 160h-291.2a160 160 0 0 0-313.6 0H64a32 32 0 0 0 0 64h896a32 32 0 0 0 0-64zM512 96a96 96 0 0 1 90.24 64h-180.48A96 96 0 0 1 512 96zM844.16 290.56a32 32 0 0 0-34.88 6.72A32 32 0 0 0 800 320a32 32 0 1 0 64 0 33.6 33.6 0 0 0-9.28-22.72 32 32 0 0 0-10.56-6.72zM832 416a32 32 0 0 0-32 32v96a32 32 0 0 0 64 0v-96a32 32 0 0 0-32-32zM832 640a32 32 0 0 0-32 32v224a32 32 0 0 1-32 32H256a32 32 0 0 1-32-32V320a32 32 0 0 0-64 0v576a96 96 0 0 0 96 96h512a96 96 0 0 0 96-96v-224a32 32 0 0 0-32-32z"
                                                    fill="#231815"></path>
                                                <path
                                                    d="M384 768V352a32 32 0 0 0-64 0v416a32 32 0 0 0 64 0zM544 768V352a32 32 0 0 0-64 0v416a32 32 0 0 0 64 0zM704 768V352a32 32 0 0 0-64 0v416a32 32 0 0 0 64 0z"
                                                    fill="#231815">
                                                </path>
                                            </g></svg>
                                    </span>
                                    Delete
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="empty-state">
            <svg class="empty-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"/>
            </svg>
            <p>No folders yet</p>
            <button class="btn primary" @onclick="ShowDialog">Create your first folder</button>
        </div>
    }
</div>

<button class="fab" @onclick="ShowDialog">+</button>

@if (_showDialog)
{
    <div class="dialog-backdrop" @onclick="CloseDialog">
        <div class="dialog-container" @onclick:stopPropagation>
            <div class="dialog-header">
                <h2>Create Folder</h2>
            </div>
            <div class="dialog-body">
                <div class="input-container">
                    <input class="input"
                           @bind="_newFolderName"
                           placeholder="Folder name"
                           @onkeyup="HandleKeyUp"/>
                    <div class="underline"></div>
                </div>
            </div>
            <div class="dialog-footer">
                <button class="btn text-btn" @onclick="CloseDialog">CANCEL</button>
                <button class="btn text-btn primary" @onclick="SaveFolderAsync"
                        disabled="@string.IsNullOrWhiteSpace(_newFolderName)">CREATE
                </button>
            </div>
        </div>
    </div>
}

@code {
    private List<FolderModel> _folders = [];
    private string _newFolderName = string.Empty;
    private bool _showDialog = false;
    private int? _activeMenuId = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadFoldersAsync();
    }

    private void ToggleMenu(int folderId)
    {
        _activeMenuId = _activeMenuId == folderId ? null : folderId;
    }

    private async Task DeleteFolder(int folderId)
    {
        try
        {
            await Db.DeleteFolderAsync(folderId);
            _activeMenuId = null;
            await LoadFoldersAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting folder: {ex.Message}");
        }
    }

    private void CloseMenu()
    {
        _activeMenuId = null;
    }

    private void ShowDialog()
    {
        _showDialog = true;
        _newFolderName = string.Empty;
        StateHasChanged();
    }

    private async Task LoadFoldersAsync()
    {
        _folders = await Db.GetFoldersAsync() ?? [];
    }

    private async Task SaveFolderAsync()
    {
        if (!string.IsNullOrWhiteSpace(_newFolderName))
        {
            try
            {
                await Db.AddFolderAsync(_newFolderName.Trim());
                _newFolderName = string.Empty;
                _showDialog = false;
                await LoadFoldersAsync();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error saving folder: {ex.Message}");
            }
        }
    }

    private void CloseDialog()
    {
        _showDialog = false;
        _newFolderName = string.Empty;
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter") _ = SaveFolderAsync();
    }

}